#Loading potentiel packages

library("readr")
library("countrycode")
library("mapdata")
library("ggmap")
library("dplyr")
library("knitr")
library("lubridate")
library("maps")
library("ggplot2")
library(stringr)

#Question 1 - Create a new dataframe of the stock of paintings at MOMA for each month in the year.
#Load raw data and filter paintings.
df0 = read_csv("https://raw.githubusercontent.com/MuseumofModernArt/collection/master/Artworks.csv")
df = df0 %>%
  filter(Classification == 'Painting')
#Create month variable.
df= df[order(df$DateAcquired),]
df= na.omit(df)
df$MonthAcquired = paste(year(df$DateAcquired), str_pad(month(df$DateAcquired), 2, pad = "0"),sep = "")
#Create dataframe with stock of paintings for each month. 
by_MonthAcquired <- group_by(df, MonthAcquired) 
stock <- df %>%
  group_by(MonthAcquired) %>%
  summarise(NewPaintings = n()) %>%
  data.frame
stock$stockofpaintings=cumsum(stock$NewPaintings)
stockbymonth=select(stock,MonthAcquired,stockofpaintings)

#Question 2
#sorting by date and fixing cumulative variable
df= df[order(df$DateAcquired),]
df$antal=1

df.plot = df %>%
  group_by(DateAcquired) %>%
  summarise(antal = sum(antal)) %>%
  data.frame
df.plot$cum=cumsum(df.plot$antal)

p= ggplot(data =df.plot, aes(x=DateAcquired, y=cum, colour="red"))
p= p + geom_freqpoly(binwidth=100, fill="red", stat="identity") + labs(x = "Time", y = "Art acquired", title = "Number of art acquired over time (cumulative)")
plot(p)

#removing missing values on its own

#freqpoly is an appropriate one. its good at showing data over time

#Question 3
#sorting data
df= df[order(df$CuratorApproved, df$DateAcquired),]

#preparing two data frames. one with CuratorApproved=N and one with CuratorApproved=Y and calculating cumulatives
#Curatorapproved = N
df.agg0 = df %>%
  filter(CuratorApproved == 'N') %>%
  select(CuratorApproved, DateAcquired, antal) %>%
  data.frame()

df.plot1 = df.agg0 %>%
  group_by(DateAcquired, CuratorApproved) %>%
  summarise(antal = sum(antal)) %>%
  data.frame
df.plot1$cum=cumsum(df.plot1$antal)

#curatorapproved = Y
df.agg00 = df %>%
  filter(CuratorApproved == 'Y') %>%
  select(CuratorApproved, DateAcquired, antal) %>%
  data.frame()

df.plot2 = df.agg00 %>%
  group_by(DateAcquired, CuratorApproved) %>%
  summarise(antal = sum(antal)) %>%
  data.frame
df.plot2$cum=cumsum(df.plot2$antal)

#merging the two data frames and plotting

df.agg.merge= rbind(df.plot1, df.plot2)
  
p= ggplot(df.agg.merge, aes(x=DateAcquired, y=cum, colour=CuratorApproved))
p= p + geom_freqpoly(binwidth=100, stat="identity") + labs(x = "Time", y = "Art acquired", title = "Number of art acquired over time (cumulative)")
plot(p)

#Question 4
#DF grouped by DEPARTMENT??? 
#Preparing data frame..


df.agg = df %>%
  group_by(Department) %>%
  summarise(antal = sum(antal)) %>%
  data.frame

#Question 5
#PLotting
p= ggplot(df.agg, aes(x=Department, y=antal))
p= p + geom_histogram(binwidth=100, stat="identity") + labs(x = "Department", y = "Art acquired", title = "Number of art acquired by department")
plot(p)

#Question 6
#making a data frame with number of art from each artist and removing missings by the filter condition
df.agg2 = df %>%
  group_by(Artist) %>%
  summarise(antal = sum(antal)) %>%
  filter(Artist>0) %>%
  data.frame
#sorting by antal to see who has the most paintings..

df.agg2= df.agg2[order(df.agg2$antal, decreasing = TRUE),]
#printing top 10
head(df.agg2,10)


#Question 7 - The variable ArtistBio lists the birth place of each painter. Use this information to create a world map where each country is colored according to the stock of paintings in MOMA’s collection.
#Extracting artist demonym from ArtistBio
df$demonym=gsub("\\(", "", df$ArtistBio)
df$demonym=gsub(",", "", df$demonym)
df$demonym=gsub(")", "", df$demonym)
df$demonym=str_extract(df$demonym, "[A-z]*")
df$demonym = gsub("Argentine","Argentinean",df$demonym)
df$demonym = gsub("Icelandic","Icelander",df$demonym)
df1 = df %>%
  group_by(demonym) %>%
  summarise(n()) %>%
  data.frame
summary(dfd)


#However, some artist were born in another country, which requires more extraction and some clean-up:
df$birth = str_extract(df$ArtistBio, "born [A-z]*\\s[A-z]*")
df$birth = gsub("born ","",df$birth)
df$birth = gsub("in ","",df$birth)
df$birth = gsub("[Tt]he ","",df$birth)
df$birth = gsub("Belorussia","Belarus",df$birth)
df$birth = gsub("Beirut","Lebanon",df$birth)
df2=df2[complete.cases(df2),]
names(df)[names(df)=="birth"] <- "name"
df2 = df %>%
  group_by(name) %>%
  summarise(n()) %>%
  data.frame
df2=df2[complete.cases(df2),]

#An issue is that we both have countries as names and denonyms (ARBEJDER PÅ DET, HPH)
#Using the a dataset on countries from mledoze, we match denonyms and birthpplace, respectively, with the ISO3 code. 
dfd = read.csv("https://raw.githubusercontent.com/mledoze/countries/master/dist/countries.csv",sep = ";")
dfd$name=word(dfd$name, 1, sep = fixed(","))
dfa=select(dfd,name,demonym)
dfx=right_join(dfa,df1) 
dfaa=select(dfd,name,cca3)
dfx=right_join(dfaa,dfx) 


library(rworldmap)
sPDF <- joinCountryData2Map( dfx
                             ,joinCode = "ISO3"
                             ,nameJoinColumn = "cca3")
mapDevice()
mapCountryData(sPDF,
               nameColumnToPlot='n..',  
               colourPalette =c("lightblue1","blue"),
               missingCountryCol="gray95",
               catMethod = "logFixedWidth",
               mapTitle="P")
